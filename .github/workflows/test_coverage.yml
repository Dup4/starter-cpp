# yaml-language-server: $schema=https://json-schema.org/draft-07/schema#
name: Test Coverage

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    env:
      GCC_VERSION: 12

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v3

      - name: Setup bazel
        uses: jwlawson/actions-setup-bazel@v1
        with:
          bazel-version: "latest"

      - name: Install GCC and lcov
        run: |
          sudo apt update
          sudo apt install -y \
            lcov \
            g++-${{ env.GCC_VERSION }}-multilib \
            gcc-${{ env.GCC_VERSION }}-multilib
          echo "CC=gcc-${{ env.GCC_VERSION }}" >> $GITHUB_ENV
          echo "CXX=g++-${{ env.GCC_VERSION }}" >> $GITHUB_ENV
          echo "GCOV=gcov-${{ env.GCC_VERSION }}" >> $GITHUB_ENV

      - name: Coverage
        run: |
          make bazel_coverage
          make bazel_coverage_genhtml
          cp ./bazel-testlogs/unittest/coverage.dat coverage.dat

      - name: upload coverage artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: |
            coverage-html
            coverage.dat

      - name: Upload coverage to CodeCov
        uses: codecov/codecov-action@v3
        with:
          files: coverage.dat
          verbose: true

  test-ubuntu:
    runs-on: ubuntu-latest

    steps:
      - name: Set up GCC
        uses: egor-tensin/setup-gcc@v1
        with:
          version: 12
          platform: x64

      - run: |
          gcc --version
          g++ --version

  test-macOS:
    runs-on: macos-latest

    steps:
      - name: Set up GCC
        uses: egor-tensin/setup-gcc@v1
        with:
          version: 12
          platform: x64

      - run: |
          gcc --version
          g++ --version
