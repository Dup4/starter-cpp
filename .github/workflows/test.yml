# yaml-language-server: $schema=https://json-schema.org/draft-07/schema#
name: Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        tool:
          - cmake
          - bazel
        compiler:
          - gcc
          - clang
        compiler_version:
          - 11
          - 12
          - 13.0.0
          - 14
          - 15
        exclude:
          - compiler: gcc
            compiler_version: 13.0.0
          - compiler: gcc
            compiler_version: 14
          - compiler: gcc
            compiler_version: 15
          - compiler: clang
            compiler_version: 11
          - compiler: clang
            compiler_version: 12

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v3

      - name: Setup bazel
        if: matrix.tool == 'bazel'
        uses: jwlawson/actions-setup-bazel@v1
        with:
          bazel-version: "latest"

      - name: Setup cmake
        if: matrix.tool == 'cmake'
        uses: jwlawson/actions-setup-cmake@v1
        with:
          cmake-version: "latest"

      - name: Install Clang
        if: matrix.compiler == 'clang'
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: ${{ matrix.compiler_version }}

      - name: Set Clang Compiler Env
        if: matrix.compiler == 'clang'
        run: |
          echo "CC=${LLVM_PATH}/bin/clang" >> $GITHUB_ENV
          echo "CXX=${LLVM_PATH}/bin/clang++" >> $GITHUB_ENV

      - name: Install GCC For Ubuntu
        if: matrix.compiler == 'gcc' && runner.os == 'ubuntu'
        run: |
          sudo apt-get install -y gcc-${{ matrix.compiler_version }} g++-${{ matrix.compiler_version }}

      - name: Install GCC For macOS
        if: matrix.compiler == 'gcc' && runner.os == 'macos'
        run: |
          sudo brew install -y gcc-${{ matrix.compiler_version }} g++-${{ matrix.compiler_version }}

      - name: Set GCC Compiler Env
        if: matrix.compiler == 'gcc'
        run: |
          echo "CC=gcc-${{ matrix.compiler_version }}" >> $GITHUB_ENV
          echo "CXX=g++-${{ matrix.compiler_version }}" >> $GITHUB_ENV

      - name: Build And Test Use Cmake
        if: matrix.tool == 'cmake'
        run: |
          make tests
          make unittest
          make benchmark

      - name: Build And Test Use Bazel
        if: matrix.tool == 'bazel'
        run: |
          make bazel_ut
          make bazel_bench

      # - name: GCOVR Analysis
      #   if: contains(matrix.os, 'ubuntu')
      #   run: |
      #     pip install gcovr==5.1
      #     bash -e gcovr.sh

      # - name: upload coverage artifact
      #   if: contains(matrix.os, 'ubuntu')
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: coverage
      #     path: .coverage

      # - name: Upload coverage to CodeCov
      #   if: contains(matrix.os, 'ubuntu')
      #   uses: codecov/codecov-action@v2
      #   with:
      #     files: .coverage/coverage.xml
      #     verbose: true
