# yaml-language-server: $schema=https://json-schema.org/draft-07/schema#
name: Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v2

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1
        with:
          cmake-version: "latest"

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "14.0"

      - name: Build
        run: |
          export CC=clang
          export CXX=clang++
          make tests

      - name: Unit Test
        run: |
          make unittest

      - name: GCOVR Analysis
        if: contains(matrix.os, 'ubuntu')
        run: |
          pip install gcovr==5.1
          bash -e gcovr.sh

      - name: upload coverage artifact
        if: contains(matrix.os, 'ubuntu')
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: .coverage

      - name: Upload coverage to CodeCov
        if: contains(matrix.os, 'ubuntu')
        uses: codecov/codecov-action@v2
        with:
          files: .coverage/coverage.xml
          verbose: true

  benchmark:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v2

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1
        with:
          cmake-version: "latest"

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "14.0"

      - name: Build
        run: |
          export CC=clang
          export CXX=clang++
          make tests

      - name: Benchmark
        run: |
          make benchmark
